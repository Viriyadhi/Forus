name: Continuous Integration

on:
  push:
    branches:
      - feature/**
      - develop

  pull_request:
    branches:
      - develop
      - main

    
jobs:
  build_and_test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:' 

      - name: Get the flutter version
        run: flutter --version

      - name: Install dependencies
        run: flutter pub get

      - name: Verify formatting
        id: formatting
        continue-on-error: true
        run: dart format --set-exit-if-changed . && echo "formatting-outcome=0" >> $GITHUB_ENV || echo "formatting-outcome=1" >> $GITHUB_ENV

      - name: Analyze project source
        id: analyze
        continue-on-error: true
        run: flutter analyze --fatal-infos && echo "analyze-outcome=0" >> $GITHUB_ENV || echo "analyze-outcome=1" >> $GITHUB_ENV

      - name: Run tests
        id: tests
        continue-on-error: true
        run: flutter test && echo "test-outcome=0" >> $GITHUB_ENV || echo "test-outcome=1" >> $GITHUB_ENV

      - name: Generate Report
        id: report
        run: |
          echo "Report:"
          echo "Formatting Outcome: ${{ env.formatting-outcome }}"
          echo "Analyze Outcome: ${{ env.analyze-outcome }}"
          echo "Test Outcome: ${{ env.test-outcome }}"
          if [ ${{ env.formatting-outcome }} -ne 0 ] || [ ${{ env.analyze-outcome }} -ne 0 ] || [ ${{ env.test-outcome }} -ne 0 ]; then
            exit 1
          fi
